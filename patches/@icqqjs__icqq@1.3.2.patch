diff --git a/lib/common.d.ts b/lib/common.d.ts
index bdfe98c9920d99e7d86825fd1fa7a2761cf2903c..3f9e74673cb09d4197266588df4e4e621839deb9 100644
--- a/lib/common.d.ts
+++ b/lib/common.d.ts
@@ -52,5 +52,11 @@ export interface UserProfile {
     signature: string;
     /** 自定义的QID */
     QID: string;
+    nickname: string;
+    country: string;
+    province: string;
+    city: string;
+    email: string;
+    birthday: [number, number, number];
 }
 export * from "./core/constants";
diff --git a/lib/internal/internal.js b/lib/internal/internal.js
index 84a509ee996dbb17414c576b8c91d78405bf710c..65ac2496c52314758e1a7004409354559fcb1359 100644
--- a/lib/internal/internal.js
+++ b/lib/internal/internal.js
@@ -99,6 +99,14 @@ async function getUserProfile(uin = this.uin) {
     });
     // 有需要自己加！
     return {
+        nickname: String(profile[20002]),
+        country: String(profile[20003]),
+        province: String(profile[20004]),
+        city: String(profile[20020]),
+        email: String(profile[20011]),
+        birthday: profile[20031].toBuffer().length === 4 ?
+            [profile[20031].toBuffer().slice(0,2).readUInt16BE(), profile[20031].toBuffer().slice(2,3).readUInt8(), profile[20031].toBuffer().slice(3).readUInt8()] :
+            undefined,
         signature: String(profile[102]),
         regTimestamp: profile[20026],
         QID: String(profile[27394])
diff --git a/lib/internal/onlinepush.js b/lib/internal/onlinepush.js
index fc3f4f64fe4240a94eb567352dc16417b8948719..d1120c2e823bb2b265d358e322442d8c1edc062c 100644
--- a/lib/internal/onlinepush.js
+++ b/lib/internal/onlinepush.js
@@ -423,7 +423,7 @@ function groupMsgListener(payload) {
             return;
         msg = message_1.GroupMessage.combine(arr);
     }
-    if (msg.raw_message) {
+    if (true) {
         const group = this.pickGroup(msg.group_id);
         const member = group.pickMember(msg.sender.user_id);
         msg.group = group;
diff --git a/lib/internal/pbgetmsg.js b/lib/internal/pbgetmsg.js
index 1b86d3ddaf64399381eea20bc12218d6f141fc8b..b908b9b984032e0797cb9861cd0979cf66606ccd 100644
--- a/lib/internal/pbgetmsg.js
+++ b/lib/internal/pbgetmsg.js
@@ -116,7 +116,7 @@ async function handleSyncMsg(proto) {
     else {
         this.stat.recv_msg_cnt++;
         const msg = new message_1.PrivateMessage(proto, this.uin);
-        if (msg.raw_message) {
+        if (true) {
             msg.friend = this.pickFriend(msg.from_id);
             if (msg.sub_type === "friend")
                 msg.sender.nickname = msg.friend.info?.nickname || this.sl.get(msg.from_id)?.nickname || "";
diff --git a/lib/message/converter.js b/lib/message/converter.js
index 27a659a3290fadd990a1a980918515a6ded4978f..e1bbe1470f302c30e7adea92f433a6e3929064e3 100644
--- a/lib/message/converter.js
+++ b/lib/message/converter.js
@@ -111,7 +111,7 @@ class Converter {
             return;
         }
         if (qq === "all") {
-            var q = 0, flag = 1, display = "全体成员";
+            var q = 0, flag = 1, display = text || "全体成员";
         }
         else {
             var q = Number(qq), flag = 0, display = text || String(qq);
@@ -121,7 +121,6 @@ class Converter {
                 display = member?.card || member?.nickname || display;
             }
         }
-        display = "@" + display;
         if (dummy)
             return this._text(display);
         const buf = Buffer.allocUnsafe(6);
@@ -535,10 +534,6 @@ class Converter {
     quote(source) {
         const elems = new Converter(source.message || "", this.ext).elems;
         const tmp = this.brief;
-        if (!this.ext?.dm) {
-            this.at({ type: "at", qq: source.user_id });
-            this.elems.unshift(this.elems.pop());
-        }
         this.elems.unshift({
             45: {
                 1: [source.seq],
diff --git a/lib/message/message.d.ts b/lib/message/message.d.ts
index c4bdd4cde3de14d515ea55364bf6c5ba315a8281..0e1ef5aa876d8e4913dc7d41756c617080dd9ced 100644
--- a/lib/message/message.d.ts
+++ b/lib/message/message.d.ts
@@ -203,6 +203,7 @@ export declare class ForwardMessage implements Forwardable {
     /** 消息内容 */
     message: MessageElem[];
     raw_message: string;
+    avatar?: string;
     /** 反序列化一条转发消息 */
     static deserialize(serialized: Buffer): ForwardMessage;
     constructor(proto: pb.Proto);
diff --git a/lib/message/message.js b/lib/message/message.js
index 71e477920b07fad9e7eb26c753e29e260800b189..118430564f3cdc3448977e7eb7e519973acf7458 100644
--- a/lib/message/message.js
+++ b/lib/message/message.js
@@ -367,12 +367,13 @@ class ForwardMessage {
         this.proto = proto;
         this.proto = proto;
         const head = proto[1];
-        this.time = head[6] || 0;
+        this.time = head[6] || proto[2]?.[6] || 0;
         this.seq = head[5];
         this.user_id = head[1] || 0;
-        this.nickname = head[14]?.toString() || head[9]?.[4]?.toString() || "";
+        this.nickname = head[14]?.toString() || head[9]?.[4]?.toString() || head[8]?.[4]?.toString() || "";
         this.group_id = head[9]?.[1];
         this.parsed = (0, parser_1.parse)(proto[3][1]);
+        this.avatar = head[20]?.[5]?.toString() || proto[2]?.[15]?.[5]?.toString();
         this.message = this.parsed.message;
         this.raw_message = this.parsed.brief;
         (0, common_1.lock)(this, "proto");
